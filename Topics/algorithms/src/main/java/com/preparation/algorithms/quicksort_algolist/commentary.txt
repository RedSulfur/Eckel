//    If during the quicksort we always take the leftmost element
//    of the subarray as a pivot then if the array is already sorted
//    we will end up in the situation when after the first partition
//    there will be a single element in the left subarray and every
//    other element in the right subarray. The second partition
//    will increase the number of elements in the left subarray by
//    by one and decrease this number by one in the right subarray
//    and so on for each partition. That's why quicksort will take
//    quadratic time in this situation in opposite to what we would
//    we get if the array was randomly shuffled when devision into
//    the subarrays would be approximately even.
